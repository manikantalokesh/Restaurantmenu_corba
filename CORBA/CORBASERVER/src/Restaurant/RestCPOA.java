package Restaurant;


/**
* Restaurant/RestCPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CorbaProject.idl
* Friday, March 24, 2023 4:12:59 PM CDT
*/

public abstract class RestCPOA extends org.omg.PortableServer.Servant
 implements Restaurant.RestCOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("sayHello", new java.lang.Integer (0));
    _methods.put ("Menu", new java.lang.Integer (1));
    _methods.put ("OrderFood", new java.lang.Integer (2));
    _methods.put ("customerOrder", new java.lang.Integer (3));
    _methods.put ("viewcurrentorders", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Restaurant/RestC/sayHello
       {
         String $result = null;
         $result = this.sayHello ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // Restaurant/RestC/Menu
       {
         String $result = null;
         $result = this.Menu ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // Restaurant/RestC/OrderFood
       {
         String user = in.read_string ();
         int friedchicken = in.read_long ();
         int cola = in.read_long ();
         float money = in.read_float ();
         String $result = null;
         $result = this.OrderFood (user, friedchicken, cola, money);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // Restaurant/RestC/customerOrder
       {
         String user = in.read_string ();
         String $result = null;
         $result = this.customerOrder (user);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // Restaurant/RestC/viewcurrentorders
       {
         String $result = null;
         $result = this.viewcurrentorders ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Restaurant/RestC:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RestC _this() 
  {
    return RestCHelper.narrow(
    super._this_object());
  }

  public RestC _this(org.omg.CORBA.ORB orb) 
  {
    return RestCHelper.narrow(
    super._this_object(orb));
  }


} // class RestCPOA
